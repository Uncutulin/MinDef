@{
    ViewData["Title"] = "Redes Sociales";
}

<style>
    body {
        padding: 0;
        margin: 0;
    }

    html, body, #map {
        height: 100%;
    }

    .leaflet-tooltip-pane .text {
        color: #191919;
        background: transparent;
        border: 0;
        box-shadow: none;
        font-size: 1.6em;
        font-weight: bold;
    }
</style>


<!-- Agrega las referencias a las bibliotecas externas -->
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
        integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
        crossorigin="" />

<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
        integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
        crossorigin=""></script>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


<div class="row">
    <div class="col-md-6" id="graficosTendenciasInteracciones">
    </div>
    <div class="col-md-6">
        <div style="height: 100vh;">
            <div id="mapRedesSociales" style="min-height: 300px; height: 100%; width: 95%"></div>           
        </div>      
    </div>
</div>

<script>
   $(document).ready(function(){
        ObtenerInteraccionesYtendencias();
        IniciarMapaRedesSociales();       
   });

    const ObtenerInteraccionesYtendencias = () => {
        $.get('/Comunicacion/RedesSociales/_InteracionesTendencias', function (data) {
            $('#graficosTendenciasInteracciones').html(data);
        });
    }

    const IniciarMapaRedesSociales = () => {
        const markers = [
            [-34.6037, -58.3816, 99],
            [-31.4201, -64.1888, 582],
            [-27.4698, -58.8309, 142],
            [-38.4161, -63.6167, 172],
            [-29.4194, -66.8597, 132],
            [-26.8083, -65.2176, 562],
            [-32.8908, -68.8272, 1102],
            [-32.7159, -63.9811, 1112],
            [-36.6182, -64.2909, 572],
            [-41.1335, -71.3101, 152],
            [-24.1865, -65.2995, 132],
            [-31.7317, -60.5115, 162],
            [-26.182, -58.2223, 99],
            [-32.9442, -60.6505, 192],
            [-24.791, -65.412, 99],
        ].sort(function (a, b) {
            return a[2] - b[2];
        }).map(function (value, index) {
            return {
                "type": "Feature",
                "geometry": {
                    "type": "Point",
                    "coordinates": [value[1], value[0]]
                },
                "properties": {
                    "qty": value[2],
                    "text": "5"
                }
            }
        });

        const mapRedesSociales = L.map("mapRedesSociales", {
            maxZoom: 6,
            minZoom: 5,
        }).setView([-38.609547, -64.3710067], 1);
        L.tileLayer(
            "https://wms.ign.gob.ar/geoserver/gwc/service/tms/1.0.0/capabaseargenmap@EPSG%3A3857@png/{z}/{x}/{-y}.png", {
            attribution: '<a href="http://leafletjs.com" title="A JS library for interactive maps"></a> <a href="http://www.ign.gob.ar/AreaServicios/Argenmap/IntroduccionV2" target="_blank">Instituto Geográfico Nacional</a> + <a href="http://www.osm.org/copyright" target="_blank">OpenStreetMap</a>',
            minZoom: 4,
            maxZoom: 18,
        }
        ).addTo(mapRedesSociales);

        MarkersGeoJSON(markers, mapRedesSociales);
    }




    const MarkersGeoJSON = (markers, mapRedesSociales) => {
        const newLayer = L.geoJSON(markers, {
            pointToLayer: function (feature, latlng) {
                let qty = feature.properties.qty;
                let color;
                let opacity;
                let radius;
                if (qty <= 100) {
                    color = '#FF924B'
                    radius = 12;
                }
                if (qty > 100 && qty <= 500) {
                    color = '#FFD02B'
                    radius = 16;
                }
                if (qty > 500 && qty <= 1000) {
                    color = '#6bda10'
                    radius = 20;
                }
                if (qty > 1000) {
                    color = '#15aa02'
                    radius = 28;
                }
                return L.circleMarker(latlng, {
                    fillColor: color,
                    color: "#000",
                    weight: 0,
                    opacity: 11,
                    fillOpacity: 1,
                    className: 'zIndex',
                    radius: radius,
                }).bringToFront();
            },
            onEachFeature: function (feature, layer) {
                console.log(feature.properties.qty);
                var text = L.tooltip({
                    permanent: true,
                    direction: 'center',
                    className: 'text',
                })
                    .setContent(feature.properties.qty.toString())
                    .setLatLng(layer.getLatLng());
                text.addTo(mapRedesSociales);
            }
        });
        mapRedesSociales.addLayer(newLayer);
    }

</script>
